@model Inventory.Models.OrderItem

@{
    ViewBag.Title = "Edit";
}

<h2>Edycja pozycji zamówienia</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>OrderItem</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.AssetId)

        @Html.HiddenFor(model => model.OrderId)
        @Html.HiddenFor(model => model.Status)
        @Html.HiddenFor(model => model.StatusPriority)


        <div class="form-group">
            @Html.LabelFor(model => model.AssetName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AssetName, new { htmlAttributes = new { disabled = "disabled", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AssetName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExtraAssetDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExtraAssetDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExtraAssetDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UM, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UM, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Qty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Qty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Qty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isMedicine, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isMedicine)
                    @Html.ValidationMessageFor(model => model.isMedicine, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @if (User.IsInRole("Admin"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Supplier, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Supplier, new { htmlAttributes = new { data_supplier_autocomplete = @Url.Action("SupplierAutocomplete"), @class = "form-control" } })
                    @*@Html.ValidationMessageFor(model => model.Supplier, "", new { @class = "text-danger" })*@
                </div>
            </div>
        }
        @Html.TextBox("BaseSupplierId", Model.Orders.SupplierId, new { @class = "hidden" })



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
